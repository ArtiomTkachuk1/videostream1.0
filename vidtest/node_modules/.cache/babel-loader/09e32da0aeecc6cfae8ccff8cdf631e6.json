{"ast":null,"code":"var _jsxFileName = \"C:\\\\\\u0440\\u0430\\u0431\\u043E\\u0442\\u0430\\\\\\u043A\\u043E\\u0434\\\\videostream1.0\\\\vidtest\\\\src\\\\components\\\\ReactPlayer\\\\ReactPlayer.js\";\nimport React from 'react';\nimport ReactPlayer from 'react-player';\nexport default class RP extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ChunkRootUpdater = () => {\n      if (this.props.chunk_max > this.state.chunknum) {\n        this.setState({\n          chunknum: this.state.chunknum + 1\n        });\n      }\n    };\n\n    this.pathbase = 'http://localhost:3000/video/';\n    this.state = {\n      chunknum: 1\n    };\n  }\n\n  render() {\n    let URL = this.pathbase + this.state.chunknum;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      style: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        margin: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"React player\"), React.createElement(ReactPlayer, {\n      style: {\n        width: \"120%\",\n        height: \"80%\",\n        display: \"flex\",\n        margin: \"auto\",\n        backgroundColor: \"black\"\n      },\n      url: URL,\n      playing: true,\n      muted: true,\n      onEnded: () => this.ChunkRootUpdater(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/работа/код/videostream1.0/vidtest/src/components/ReactPlayer/ReactPlayer.js"],"names":["React","ReactPlayer","RP","Component","constructor","props","ChunkRootUpdater","chunk_max","state","chunknum","setState","pathbase","render","URL","justifyContent","display","margin","width","height","backgroundColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,eAAe,MAAMC,EAAN,SAAiBF,KAAK,CAACG,SAAvB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAMnBC,gBANmB,GAMF,MAAI;AACjB,UAAG,KAAKD,KAAL,CAAWE,SAAX,GAAqB,KAAKC,KAAL,CAAWC,QAAnC,EAA4C;AAC1C,aAAKC,QAAL,CAAc;AACZD,UAAAA,QAAQ,EAAC,KAAKD,KAAL,CAAWC,QAAX,GAAoB;AADjB,SAAd;AAGH;AACF,KAZkB;;AAEjB,SAAKE,QAAL,GAAc,8BAAd;AACA,SAAKH,KAAL,GAAa;AAACC,MAAAA,QAAQ,EAAG;AAAZ,KAAb;AACD;;AASDG,EAAAA,MAAM,GAAE;AACN,QAAIC,GAAG,GAAC,KAAKF,QAAL,GAAc,KAAKH,KAAL,CAAWC,QAAjC;AACA,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACA,MAAA,KAAK,EAAE;AACDK,QAAAA,cAAc,EAAC,QADd;AAEDC,QAAAA,OAAO,EAAC,MAFP;AAGDC,QAAAA,MAAM,EAAC;AAHN,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAUE,oBAAC,WAAD;AACE,MAAA,KAAK,EAAE;AACRC,QAAAA,KAAK,EAAC,MADE;AAERC,QAAAA,MAAM,EAAC,KAFC;AAGRH,QAAAA,OAAO,EAAC,MAHA;AAIRC,QAAAA,MAAM,EAAC,MAJC;AAKRG,QAAAA,eAAe,EAAC;AALR,OADT;AAQI,MAAA,GAAG,EAAEN,GART;AASI,MAAA,OAAO,EAAE,IATb;AAUI,MAAA,KAAK,EAAE,IAVX;AAWI,MAAA,OAAO,EACL,MAAK,KAAKP,gBAAL,EAZX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CADF;AA4BD;;AA5C6C","sourcesContent":["import React from 'react'\r\nimport ReactPlayer from 'react-player'\r\nexport default class RP extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.pathbase='http://localhost:3000/video/'\r\n    this.state = {chunknum : 1};\r\n  }\r\n\r\n  ChunkRootUpdater=()=>{\r\n      if(this.props.chunk_max>this.state.chunknum){\r\n        this.setState({\r\n          chunknum:this.state.chunknum+1\r\n        })\r\n    }\r\n  }\r\n  render(){\r\n    let URL=this.pathbase+this.state.chunknum\r\n    return (\r\n      <React.Fragment>\r\n        <h1\r\n        style={{\r\n              justifyContent:\"center\",\r\n              display:\"flex\",\r\n              margin:\"auto\",\r\n            }}\r\n        >\r\n          React player\r\n        </h1>\r\n        <ReactPlayer\r\n          style={{\r\n  \t\t\t\t\t\t\twidth:\"120%\",\r\n  \t\t\t\t\t\t\theight:\"80%\",\r\n  \t\t\t\t\t\t\tdisplay:\"flex\",\r\n  \t\t\t\t\t\t\tmargin:\"auto\",\r\n  \t\t\t\t\t\t\tbackgroundColor:\"black\",\r\n  \t\t\t\t\t\t}}\r\n            url={URL}\r\n            playing={true}\r\n            muted={true}\r\n            onEnded={\r\n              () =>this.ChunkRootUpdater()\r\n            }\r\n        />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}